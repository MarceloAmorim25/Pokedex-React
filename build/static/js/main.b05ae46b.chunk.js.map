{"version":3,"sources":["assets/ash.png","assets/PokeBall.png","pages/Login/index.js","navbar.js","pages/Home/index.js","pages/Perfil/index.js","pages/PerfilPokemon/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","useState","usuario","setUsuario","data","setData","history","useHistory","e","a","preventDefault","push","alert","axios","post","username","then","res","console","log","catch","error","React","useEffect","length","get","user","localStorage","setItem","className","onSubmit","id","type","placeholder","value","onChange","target","Navbar","to","Home","number","setNumber","list","Description","map","p","clicked","name","k","onClick","pokemon","key","src","image_url","alt","height","kind","weight","onMouseOver","Perfil","setUser","pokemons","setPokemons","getItem","handleDelete","delete","window","location","reload","Ash","PerfilPokemon","descriptionPokemon","PokeBall","Routes","path","exact","component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b05ae46b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ash.8ebc9b25.png\";","module.exports = __webpack_public_path__ + \"static/media/PokeBall.ca3b4b14.png\";","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.css';\n\nexport default function Login() {\n\n    \n    const[usuario, setUsuario] = useState('');\n    const[data, setData] = useState([]);\n    const history = useHistory(); \n    \n    \n    React.useEffect(() => {\n\n      if(usuario.length !== 0){\n\n        axios\n          .get(`https://pokedex20201.herokuapp.com/users/${usuario}`)\n          .then((res) => {\n            setData(res.data.user.username)\n          })\n          .catch(function(error) {\n            console.log(error);\n          })\n\n      }\n\n   }, [usuario])\n\n   localStorage.setItem('usuario', usuario);\n\n   async function handleLogin(e) { \n     \n        e.preventDefault();\n                       \n        if(usuario === data) {\n\n          history.push('/home');\n          alert('Login autorizado...');\n\n        }else {\n            await axios\n              .post('https://pokedex20201.herokuapp.com/users', {\n                username: usuario\n              })\n              .then((res) => {\n                console.log(res);\n                alert('Novo usuário criado!');\n                history.push('/home');                \n              })\n              .catch(function (error) {\n                console.log(error);\n                alert('Falha no login, tente novamente.');\n              });\n        }\n    }\n\n    return(\n\n        <div className=\"box-container\">\n          <div className=\"box\">\n              <form  onSubmit={handleLogin}>\n\n                  <h1>Página de Login</h1>\n\n                  <label>Usuário:</label>\n\n                  <input\n                      id=\"input\"\n                      type=\"text\"\n                      placeholder=\"Login\" \n                      value={usuario}\n                      onChange={e => setUsuario(e.target.value)}\n                  />\n\n                  <br />\n      \n                  <button type=\"submit\">Entrar</button>\n\n              </form>\n            </div>\n        </div>\n\n    );\n}\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\n\nexport default function Navbar() {\n    return(\n\n        <div className=\"navbar\">          \n            <ul>\n                <li><Link className=\"link\" to=\"/perfil\">Perfil</Link></li>\n                <li><Link className=\"link\" to=\"/\">Saiba mais</Link></li>\n                <li><Link className=\"link\" to=\"/\">Pesquisar</Link></li>\n                <li><Link className=\"link\" to=\"/\">Logout</Link></li>\n            </ul>                \n        </div>\n    );\n}\n\n\n\n\n","import React from 'react';\nimport axios from 'axios';\nimport Navbar from '../../navbar';\nimport { useHistory } from 'react-router-dom';\nimport './style.css';\n\n\nexport default function Home() {\n\n   const [data, setData] = React.useState([]);\n   const [number, setNumber] = React.useState(1);\n   const list = [];\n\n   const history = useHistory();\n\n   //GET => recebendo os dados dos pokemons\n\n   React.useEffect(\n      \n      () => {\n\n         axios\n         .get(`https://pokedex20201.herokuapp.com/pokemons?page=${number}`)\n         .then(function resp(res){\n\n            setData(res.data.data);\n            console.log(res);\n         })\n\n   }, [number]);\n\n\n   //atribuindo um característica de não clicado para cada pokemon\n\n   data.map(k => {\n      return list.push(k.clicked = false);\n   })\n\n    //essa função encaminha para a página de descrição.\n    //Primeiro ela salva no localStorage o nome do pokemon clicado\n    //Depois redireciona para a página de descrição\n\n   function Description() {\n      data.map(p => {\n         if(p.clicked === true) {\n            localStorage.setItem('pokemons', p.name)\n         }\n         return p.name;\n      })\n\n      history.push(\"/pokemon\");      \n   }\n\n   return(\n      <>\n         <Navbar />\n\n      <div className=\"botoesPaginacao\">\n         <button className=\"botoesProximoAnterior\" onClick={() => setNumber(number - 1)}>Página Anterior</button>\n         <button className=\"botoesProximoAnterior\" onClick={() => setNumber(number + 1)}>Próxima Página</button>         \n      </div>\n\n      <div className=\"pagina\">Página: {number}</div>\n\n      <div className=\"container-home\">\n\n          {data && (           \n                  <div className=\"deck\">\n                     {data.map(pokemon => (\n                                                \n                              <div className=\"pokeCard\" key={pokemon.id}>\n\n                                    <img src={pokemon.image_url} alt=\"\"/>\n\n                                    <br/>\n\n                                    <strong>ALTURA:</strong>\n                                    <p>{pokemon.height}</p>\n\n                                    <strong>TIPO:</strong>\n                                    <p className=\"tipo\">{pokemon.kind}</p>\n\n                                    <strong>NOME:</strong>\n                                    <p className=\"nome\">{pokemon.name}</p>\n\n                                    <strong>DESCRIÇÃO: </strong>\n                                    <p>{pokemon.weight}</p>                                                                    \n\n                                 <div>\n                                    <button type=\"button\" onClick={Description} onMouseOver={() => pokemon.clicked = true}>Descrição</button>\n                                 </div>\n\n                           </div>                                                                                                                  \n                     ))}\n                </div>                \n            )}\n\n            </div>\n\n               <div className=\"botoesPaginacao\">\n                  <button className=\"botoesProximoAnterior\" onClick={() => setNumber(number - 1)}>Página Anterior</button>\n                  <button className=\"botoesProximoAnterior\" onClick={() => setNumber(number + 1)}>Próxima Página</button>         \n               </div>\n              \n      </>\n       \n    );\n}\n\n","import React from 'react';\nimport Navbar from '../../navbar';\nimport axios from 'axios';\nimport Ash from '../../assets/ash.png'\nimport './style.css';\n\n\nexport default function Perfil()  {\n\n   const [user, setUser] = React.useState({});\n   const [pokemons, setPokemons] = React.useState([]);\n   let usuario = localStorage.getItem('usuario');\n\n  React.useEffect(() => {\n      axios\n         .get(`https://pokedex20201.herokuapp.com/users/${usuario}`)\n         .then(res => {\n            setUser(res.data.user)\n            setPokemons(res.data.pokemons)});\n   }, [usuario]);\n\n \n   const handleDelete = async (pokemon) => { \n\n    console.log(pokemon);\n       \n    await axios\n        .delete(`https://pokedex20201.herokuapp.com/users/${usuario}/starred/${pokemon}`)\n        .then(res => console.log(res));\n        window.location.reload(false);\n    };\n \n    return(\n        <>\n        <Navbar />         \n        <div className=\"box-container-perfil\">\n            <div className=\"pokedex\">\n                <img className=\"ash\" src={Ash} alt=\"\"/> \n            </div>\n                <div className=\"usuario\"> <strong>Usuário: {user.username}</strong></div>\n                <h3> Pokemons favoritos: {pokemons.length}</h3>\n                \n                {pokemons.map(p => (\n                    <>\n                    <div className=\"favoritos\">\n                    <img className=\"pokemonImagem\" src={p.image_url} alt=\"\"/>\n                    <button onClick={() => handleDelete(p.name)} className=\"pokemonNome\">Delete: {p.name}</button>\n                    </div>\n                    </>\n                ))}\n                     \n        </div>\n        </>\n    );\n}\n","import React from 'react';\nimport Navbar from '../../navbar';\nimport axios from 'axios';\nimport PokeBall from '../../assets/PokeBall.png';\nimport './estilo.css';\n\nexport default function PerfilPokemon() {\n\n    const [data, setData] = React.useState([]);\n\n    //recupera no localStorage o nome do pokemon clicado\n\n    let descriptionPokemon = localStorage.getItem('pokemons');\n\n\n   //GET => dados do pokemon registrado no localStorage\n\n    React.useEffect(() => {\n       axios\n          .get(`https://pokedex20201.herokuapp.com/pokemons/${descriptionPokemon}`)\n          .then((res) => setData(res.data));\n    }, [descriptionPokemon]);\n\n    console.log(data);\n\n   //Essa é responsável pela captura do Pokemon\n   //Primeiro o preventDefault para evitar que a página recarregue\n   //Depois o post para API com o nome do usuário logado e o pokemon da página de descrição\n \n  function handleFav(e) {\n\n     e.preventDefault();\n\n     let username = localStorage.getItem('usuario');\n      \n         axios\n           .post(`https://pokedex20201.herokuapp.com/users/${username}/starred/${descriptionPokemon}`)\n           .then(() => {\n             alert('Pokemon capturado!');\n           })\n           .catch(function (error) {\n             console.log(error);\n             alert('Não foi possível capturar esse Pokemon!');\n           });\n  }\n\n   return(\n      <>\n         <Navbar />  \n\n         <div className=\"container-pokemon\">\n            <div className=\"descricao\">\n               <div><h1>{data.name}</h1></div>\n               <div><h1><img src={data.image_url} alt=\"pokemon\"/></h1></div>\n            </div>\n\n            <div className=\"habilidades\">\n               <div><h1>{data.height}</h1></div>\n               <div><h1>{data.weight}</h1></div>\n               <div><h1>{data.kind}</h1></div>\n               <div><button onClick={handleFav}><img src={PokeBall} alt=\"pokemon\"/></button></div> \n\n            </div>                       \n         </div>\n         \n      </>\n       \n    );\n}\n\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Perfil from './pages/Perfil';\nimport PerfilPokemon from './pages/PerfilPokemon';\n\nexport default function Routes() {\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/home\" component={Home} />\n            \n                <Route path=\"/perfil\" component={Perfil} />\n                <Route path=\"/pokemon\" component={PerfilPokemon} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import React from 'react';\nimport Routes from './routes'\n\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n\n    <Routes />\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}